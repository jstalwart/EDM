library(ggplot2)
library(grid)
set.seed(288)
xvar <- c(rnorm(1500, mean=-1), rnorm(1500, mean=1.5))
yvar <- c(rnorm(1500, mean=1), rnorm(1500, mean=1.5))
zvar <- as.factor(c(rep(1,1500), rep(2,1500)))
xy <- data.frame(xvar, yvar, zvar)
ggplot(xy, aes(xvar, yvar)) + geom_point() + geom_rug(col="darkred", alpha=0.1)
p <- ggplot(xy, aes(xvar, yvar, color = zvar)) + geom_point() + scale_colour_manual(values = c("orange", "purple"))
Scatter <- p + theme(legend.position = c(1,1), legend.justification = c(1,1))
Scatter
p <- ggplot(xy, aes(x=xvar, fill = zvar, alpha = I(0.5))) + geom_density() + scale_fill_manual(values = c("orange", "purple"))
den1 <- p + theme(legend.position = "none", axis.title.x = element_blank(), axis.text.x = element_blank())
den1
p <- ggplot(xy, aes(x=yvar, fill = zvar, alpha = I(0.5))) + geom_density() + scale_fill_manual(values = c("orange", "purple"))
den2 <- p + theme(legend.position = "none", axis.title.y = element_blank(), axis.text.y = element_blank()) + coord_flip()
den2
grid.newpage()
pushViewport(viewport(layout=grid.layout(4,4)))
print(den1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1:3))
print(Scatter, vp = viewport(layout.pos.row = 2:4, layout.pos.col = 1:3))
print(den2, vp=viewport(layout.pos.row = 2:4, layout.pos.col = 4))
library(dplyr)
library(plotly)
library(reshape2)
library(lubridate)
library(randomForest)
setwd("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/Practica 3/Bike-Sharing-Dataset")
days <- read.csv("day.csv")
hour <- read.csv("hour.csv")
days$dteday <- as_date(days$dteday)
days_since <- select(days, workingday, holiday, temp, hum, windspeed, cnt)
days_since$days_since_2011 <- int_length(interval(ymd("2011-01-01"), days$dteday)) / (3600*24)
days_since$SUMMER <- ifelse(days$season == 3, 1, 0)
days_since$FALL <- ifelse(days$season == 4, 1, 0)
days_since$WINTER <- ifelse(days$season == 1, 1, 0)
days_since$MISTY <- ifelse(days$weathersit == 2, 1, 0)
days_since$RAIN <- ifelse(days$weathersit == 3 | days$weathersit == 4, 1, 0)
days_since$temp <- days_since$temp * 47 - 8
days_since$hum <- days_since$hum * 100
days_since$windspeed <- days_since$windspeed * 67
rf <- randomForest(cnt~., data=days_since)
results <- select(days_since, days_since_2011, temp, hum, windspeed, cnt)
nr <- nrow(days_since)
for(c in names(results)[1:4])
{
for(i in 1:nr){
r <- days_since
r[[c]] <- days_since[[c]][i]
sal <- predict(rf, r)
results[[c]][i] <- sum(sal) / nr
}
}
p1 <- ggplot(days_since, aes(x=days_since_2011, y=results$days_since_2011)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Days since 2011")
p2 <- ggplot(days_since, aes(x=temp, y=results$temp)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Temperature")
p3 <- ggplot(days_since, aes(x=hum, y=results$hum)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Humidity")
p4 <- ggplot(days_since, aes(x=windspeed, y=results$windspeed)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Wind speed")
subplot(p1,p2,p3,p4, shareY = TRUE, shareX = FALSE, titleX = TRUE)
library(tictoc)
sampled <- sample_n(days_since, 20)
temp <- sampled$temp
hum <- sampled$hum
th <- inner_join(data.frame(temp),data.frame(hum), by=character())
th$p <- 0
tic("entra")
for(i in 1:nrow(th)){
r <- days_since
r[["temp"]] <- th[["temp"]][i]
r[["hum"]] <- th[["hum"]][i]
sal <- predict(rf, r)
th[["p"]][i] <- sum(sal) / nr
}
toc()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_histogram2D()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_histogram()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2D()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_density_2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_density_2d(aes(fill=..level..))
ggplot(th, aes(x=temp, y = hum, z=p)) + stat_density_2d(aes(fill = ..level..), geom = "polygon")
ggplot(th, aes(x=as.factor(temp), y = as.factor(hum), z=p)) + geom_bin2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d(bins=10)
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d(bins=5)
library(tictoc)
sampled <- sample_n(days_since, 40)
temp <- sampled$temp
hum <- sampled$hum
th <- inner_join(data.frame(temp),data.frame(hum), by=character())
th$p <- 0
tic("entra")
for(i in 1:nrow(th)){
r <- days_since
r[["temp"]] <- th[["temp"]][i]
r[["hum"]] <- th[["hum"]][i]
sal <- predict(rf, r)
th[["p"]][i] <- sum(sal) / nr
}
toc()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_density_2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_density_2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d(bins=10)
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bar2d()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_bin2d(bins=10, stats=identity)
plot_ly(data = th, x = ~tem, y = ~hum, z = ~p) %>% add_heatmap()
plot_ly(data = th, x = ~temp, y = ~hum, z = ~p) %>% add_heatmap()
ggplot(th, aes(x=temp, y = hum, z=p)) + geom_tile()
ggplot(th, aes(x=temp, y = hum, fill=p)) + geom_tile()
plot_ly(data = th, x = ~temp, y = ~hum, z = ~p) %>% add_heatmap()
plot_ly(data = th, x = ~temp, y = ~hum, z = ~p) %>% add_heatmap() %>% layout(xaxis = list(title = "Temperature"), yaxis = list(title = "Humidity"))
plot_ly(data = th, x = ~temp, y = ~hum, z = ~p) %>% add_heatmap() %>% layout(xaxis = list(title = "Temperature"), yaxis = list(title = "Humidity")) %>% colorbar("Cuantity")
plot_ly(data = th, x = ~temp, y = ~hum, z = ~p) %>% add_heatmap() %>% layout(xaxis = list(title = "Temperature"), yaxis = list(title = "Humidity")) %>% colorbar(title="Cuantity")
ggplot(th, aes(x=temp, y=hum, fill = p)) + geom_tile()
ggplot(th, aes(x=temp, y=hum, fill = p)) + geom_tile(interpolate = TRUE)
ggplot(th, aes(x=temp, y=hum, fill = p)) + geom_raster(interpolate = TRUE)
ggplot(th, aes(x=temp, y=hum, fill = p)) stat_density(aes(fill = after_stat(density)), geom = "raster", position = "identity")
ggplot(th, aes(x=temp, y=hum, fill = p)) + stat_density(aes(fill = after_stat(density)), geom = "raster", position = "identity")
ggplot(th, aes(x=temp, y=hum, fill = p)) + stat_density(geom = "raster", position = "identity")
ggplot(th, aes(x=temp, y=hum, fill = p)) + geom_raster()
ggplot(th, aes(x=temp, y=hum)) + geom_raster(aes(fill = after_stat(p)))
head(th)
ggplot(th, aes(x=temp, y=hum)) + geom_raster(aes(fill = after_stat(p)))
ggplot(th, aes(x=temp, y=hum)) + geom_raster(aes(fill = p))
ggplot(th, aes(x=temp, y=hum)) + stat_density(aes(fill = p))
ggplot(th, aes(x=temp, y=hum)) + stat_density(aes(y=hum, fill = p))
ggplot(th, aes(x=temp, y=hum)) + stat_density(fill = p))
ggplot(th, aes(x=temp, y=hum)) + stat_density(aes(fill = p))
ggplot(th, aes(x=temp, y=hum)) + geom_raster(aes(fill = p), interpolate = TRUE)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p), interpolate = TRUE)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p), interpolate = TRUE, linejoin = "round")
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_raster(aes(fill = p), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_raster(aes(fill = p), interpolate = TRUE)
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_raster(aes(fill = p), interpolate = FALSE)
ggplot(th, aes(x=round(temp), y=round(hum))) + stat_density(aes(fill = p), geom = "raster", position = "identity")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_raster(aes(fill = p), linejoin = "round")
plot_ly(data = th, x = ~temp, y = ~hum, z = ~p) %>% add_heatmap() %>% layout(xaxis = list(title = "Temperature"), yaxis = list(title = "Humidity")) %>% colorbar(title="Cuantity")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_raster(aes(fill = p, width = 10), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_raster(aes(fill = p, width = 20), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 20), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 10), linejoin = "round")
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 10, height = 10))
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 5, height = 5))
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 10, height = 10))
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug()
ggplot(th, aes(x=round(temp), y=round(hum))) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.1)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.1)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.01)
g <- ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.01)
ggplotly(g)
g <- ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p)) + geom_rug(alpha = 0.01)
ggplotly(g)
g
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.01)
library(tictoc)
sampled <- sample_n(days_since, 40)
temp <- sampled$temp
hum <- sampled$hum
th <- inner_join(data.frame(temp),data.frame(hum), by=character())
th$p <- 0
tic("entra")
for(i in 1:nrow(th)){
r <- days_since
r[["temp"]] <- th[["temp"]][i]
r[["hum"]] <- th[["hum"]][i]
sal <- predict(rf, r)
th[["p"]][i] <- sum(sal) / nr
}
toc()
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.01)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 10)) + geom_rug(alpha = 0.01)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01)
library(dplyr)
library(plotly)
library(reshape2)
library(lubridate)
library(randomForest)
setwd("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/Practica 3/Bike-Sharing-Dataset")
days <- read.csv("day.csv")
hour <- read.csv("hour.csv")
days$dteday <- as_date(days$dteday)
days_since <- select(days, workingday, holiday, temp, hum, windspeed, cnt)
days_since$days_since_2011 <- int_length(interval(ymd("2011-01-01"), days$dteday)) / (3600*24)
days_since$SUMMER <- ifelse(days$season == 3, 1, 0)
days_since$FALL <- ifelse(days$season == 4, 1, 0)
days_since$WINTER <- ifelse(days$season == 1, 1, 0)
days_since$MISTY <- ifelse(days$weathersit == 2, 1, 0)
days_since$RAIN <- ifelse(days$weathersit == 3 | days$weathersit == 4, 1, 0)
days_since$temp <- days_since$temp * 47 - 8
days_since$hum <- days_since$hum * 100
days_since$windspeed <- days_since$windspeed * 67
rf <- randomForest(cnt~., data=days_since)
results <- select(days_since, days_since_2011, temp, hum, windspeed, cnt)
nr <- nrow(days_since)
for(c in names(results)[1:4])
{
for(i in 1:nr){
r <- days_since
r[[c]] <- days_since[[c]][i]
sal <- predict(rf, r)
results[[c]][i] <- sum(sal) / nr
}
}
p1 <- ggplot(days_since, aes(x=days_since_2011, y=results$days_since_2011)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Days since 2011")
p2 <- ggplot(days_since, aes(x=temp, y=results$temp)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Temperature")
p3 <- ggplot(days_since, aes(x=hum, y=results$hum)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Humidity")
p4 <- ggplot(days_since, aes(x=windspeed, y=results$windspeed)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Wind speed")
subplot(p1,p2,p3,p4, shareY = TRUE, shareX = FALSE, titleX = TRUE)
library(tictoc)
sampled <- sample_n(days_since, 40)
temp <- sampled$temp
hum <- sampled$hum
th <- inner_join(data.frame(temp),data.frame(hum), by=character())
th$p <- 0
tic("entra")
for(i in 1:nrow(th)){
r <- days_since
r[["temp"]] <- th[["temp"]][i]
r[["hum"]] <- th[["hum"]][i]
sal <- predict(rf, r)
th[["p"]][i] <- sum(sal) / nr
}
toc()
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01)
d <- read.csv("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/jane-street-market-prediction/train.csv")
head(mpg)
d <- read.csv("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/jane-street-market-prediction/train.csv", nrows=1000)
head(d)
d <- read.csv("2015.csv")
setwd("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/Practica 5")
d <- read.csv("2015.csv")
head(d)
nrow(d)
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01) + xlab("Temperature") + ylab("Humidity") + scale_color_gradient(title = "Number of bikes")
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01) + xlab("Temperature") + ylab("Humidity") + scale_color_gradient("Number of bikes")
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01) + xlab("Temperature") + ylab("Humidity") + scale_color_gradient("Number of bikes")
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01) + xlab("Temperature") + ylab("Humidity") + scale_color_gradient(name = "Number of bikes")
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01) + xlab("Temperature") + ylab("Humidity") + scale_fill_gradient(name = "Number of bikes")
d <- read.csv("kc_house_data.csv")
head(d)
nrow(d)
d <- read.csv("kc_house_data.csv")
sampled <- sample_n(d, 1000)
sampled <- select(sample, bedrooms, bathrooms, sqft_living, sqft_lot, floors, yr_built, price)
d <- read.csv("kc_house_data.csv")
sampled <- sample_n(d, 1000)
sampled <- select(sampled, bedrooms, bathrooms, sqft_living, sqft_lot, floors, yr_built, price)
rf <- randomForest(price~., data=sampled)
results <- select(sampled, bedrooms, bathrooms, sqft_living, floors, cnt)
d <- read.csv("kc_house_data.csv")
sampled <- sample_n(d, 1000)
sampled <- select(sampled, bedrooms, bathrooms, sqft_living, sqft_lot, floors, yr_built, price)
rf <- randomForest(price~., data=sampled)
results <- select(sampled, bedrooms, bathrooms, sqft_living, floors, price)
nr <- nrow(sampled)
for(c in names(results)[1:4])
{
for(i in 1:nr){
r <- sampled
r[[c]] <- sampled[[c]][i]
sal <- predict(rf, r)
results[[c]][i] <- sum(sal) / nr
}
}
p1 <- ggplot(sampled, aes(x=bedrooms, y=results$bedrooms)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Bedrooms")
p2 <- ggplot(sampled, aes(x=bathrooms, y=results$bathrooms)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Bathrooms")
p3 <- ggplot(sampled, aes(x=sqft_living, y=results$sqft_living)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Sqft Living")
p4 <- ggplot(sampled, aes(x=floors, y=results$floors)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Floors")
subplot(p1,p2,p3,p4, shareY = TRUE, shareX = FALSE, titleX = TRUE)
p1 <- ggplot(sampled, aes(x=bedrooms, y=results$bedrooms)) + geom_line() + geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Bedrooms")
p2 <- ggplot(sampled, aes(x=bathrooms, y=results$bathrooms)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Bathrooms")
p3 <- ggplot(sampled, aes(x=sqft_living, y=results$sqft_living)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Sqft Living")
p4 <- ggplot(sampled, aes(x=floors, y=results$floors)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Floors")
subplot(p1,p2,p3,p4, shareY = TRUE, shareX = FALSE, titleX = TRUE)
p1 <- ggplot(sampled, aes(x=bedrooms, y=results$bedrooms)) + geom_line() + geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Bedrooms")
p2 <- ggplot(sampled, aes(x=bathrooms, y=results$bathrooms)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Bathrooms")
p3 <- ggplot(sampled, aes(x=sqft_living, y=results$sqft_living)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Sqft Living")
p4 <- ggplot(sampled, aes(x=floors, y=results$floors)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Floors")
subplot(p1,p2,p3,p4, shareX = FALSE, titleX = TRUE)
library(dplyr)
library(plotly)
library(reshape2)
library(lubridate)
library(randomForest)
setwd("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/Practica 3/Bike-Sharing-Dataset")
days <- read.csv("day.csv")
hour <- read.csv("hour.csv")
days$dteday <- as_date(days$dteday)
days_since <- select(days, workingday, holiday, temp, hum, windspeed, cnt)
days_since$days_since_2011 <- int_length(interval(ymd("2011-01-01"), days$dteday)) / (3600*24)
days_since$SUMMER <- ifelse(days$season == 3, 1, 0)
days_since$FALL <- ifelse(days$season == 4, 1, 0)
days_since$WINTER <- ifelse(days$season == 1, 1, 0)
days_since$MISTY <- ifelse(days$weathersit == 2, 1, 0)
days_since$RAIN <- ifelse(days$weathersit == 3 | days$weathersit == 4, 1, 0)
days_since$temp <- days_since$temp * 47 - 8
days_since$hum <- days_since$hum * 100
days_since$windspeed <- days_since$windspeed * 67
rf <- randomForest(cnt~., data=days_since)
results <- select(days_since, days_since_2011, temp, hum, windspeed, cnt)
nr <- nrow(days_since)
for(c in names(results)[1:4])
{
for(i in 1:nr){
r <- days_since
r[[c]] <- days_since[[c]][i]
sal <- predict(rf, r)
results[[c]][i] <- sum(sal) / nr
}
}
library(dplyr)
library(plotly)
library(reshape2)
library(lubridate)
library(randomForest)
setwd("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/Practica 3/Bike-Sharing-Dataset")
days <- read.csv("day.csv")
hour <- read.csv("hour.csv")
days$dteday <- as_date(days$dteday)
days_since <- select(days, workingday, holiday, temp, hum, windspeed, cnt)
days_since$days_since_2011 <- int_length(interval(ymd("2011-01-01"), days$dteday)) / (3600*24)
days_since$SUMMER <- ifelse(days$season == 3, 1, 0)
days_since$FALL <- ifelse(days$season == 4, 1, 0)
days_since$WINTER <- ifelse(days$season == 1, 1, 0)
days_since$MISTY <- ifelse(days$weathersit == 2, 1, 0)
days_since$RAIN <- ifelse(days$weathersit == 3 | days$weathersit == 4, 1, 0)
days_since$temp <- days_since$temp * 47 - 8
days_since$hum <- days_since$hum * 100
days_since$windspeed <- days_since$windspeed * 67
rf <- randomForest(cnt~., data=days_since)
results <- select(days_since, days_since_2011, temp, hum, windspeed, cnt)
nr <- nrow(days_since)
for(c in names(results)[1:4])
{
for(i in 1:nr){
r <- days_since
r[[c]] <- days_since[[c]][i]
sal <- predict(rf, r)
results[[c]][i] <- sum(sal) / nr
}
}
p1 <- ggplot(days_since, aes(x=days_since_2011, y=results$days_since_2011)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Days since 2011")
p2 <- ggplot(days_since, aes(x=temp, y=results$temp)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Temperature")
p3 <- ggplot(days_since, aes(x=hum, y=results$hum)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Humidity")
p4 <- ggplot(days_since, aes(x=windspeed, y=results$windspeed)) + geom_line() +ylim(c(0,6000))+ geom_rug(alpha = 0.1, sides = "b")+ xlab("Wind speed")
subplot(p1,p2,p3,p4, shareY = TRUE, shareX = FALSE, titleX = TRUE)
library(tictoc)
sampled <- sample_n(days_since, 40)
temp <- sampled$temp
hum <- sampled$hum
th <- inner_join(data.frame(temp),data.frame(hum), by=character())
th$p <- 0
tic("entra")
for(i in 1:nrow(th)){
r <- days_since
r[["temp"]] <- th[["temp"]][i]
r[["hum"]] <- th[["hum"]][i]
sal <- predict(rf, r)
th[["p"]][i] <- sum(sal) / nr
}
toc()
ggplot(th, aes(x=temp, y=hum)) + geom_tile(aes(fill = p, width = 10, height = 15)) + geom_rug(alpha = 0.01) + xlab("Temperature") + ylab("Humidity") + scale_fill_gradient(name = "Number of bikes")
setwd("/Users/cmonserr/OneDrive - UPV/Trabajo_2/Asignaturas/Evaluacion de modelos/Practicas/Practica 5")
d <- read.csv("kc_house_data.csv")
sampled <- sample_n(d, 1000)
sampled <- select(sampled, bedrooms, bathrooms, sqft_living, sqft_lot, floors, yr_built, price)
rf <- randomForest(price~., data=sampled)
results <- select(sampled, bedrooms, bathrooms, sqft_living, floors, price)
nr <- nrow(sampled)
for(c in names(results)[1:4])
{
for(i in 1:nr){
r <- sampled
r[[c]] <- sampled[[c]][i]
sal <- predict(rf, r)
results[[c]][i] <- sum(sal) / nr
}
}
p1 <- ggplot(sampled, aes(x=bedrooms, y=results$bedrooms)) + geom_line() + geom_rug(alpha = 0.1, sides = "b") + ylab("Prediction") + xlab("Bedrooms")
p2 <- ggplot(sampled, aes(x=bathrooms, y=results$bathrooms)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Bathrooms")
p3 <- ggplot(sampled, aes(x=sqft_living, y=results$sqft_living)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Sqft Living")
p4 <- ggplot(sampled, aes(x=floors, y=results$floors)) + geom_line() + geom_rug(alpha = 0.1, sides = "b")+ xlab("Floors")
subplot(p1,p2,p3,p4, shareX = FALSE, titleX = TRUE)
library(dplyr)
library(plotly)
library(reshape2)
library(lubridate)
library(randomForest)
#days <- read.csv("day.csv")
#hour <- read.csv("hour.csv")
days$dteday <- as_date(days$dteday)
library(dplyr)
library(plotly)
library(reshape2)
library(lubridate)
library(randomForest)
#days <- read.csv("day.csv")
#hour <- read.csv("hour.csv")
# sampled <- sample_n(......, 40)
#d <- read.csv("kc_house_data.csv")
#sampled <- sample_n(d, 1000)
